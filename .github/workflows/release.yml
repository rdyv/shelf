name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Test import
        run: python3 -c "import shelf; print('Import successful')"

      - name: Extract version
        id: version
        run: |
          VERSION=$(grep 'version = ' pyproject.toml | cut -d '"' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check if version exists
        id: check
        run: |
          if pip index versions shelf-backup | grep -q "${{ steps.version.outputs.version }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version already exists on PyPI"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "New version detected"
          fi

      - name: Upload to PyPI
        if: steps.check.outputs.exists == 'false'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*

      - name: Create GitHub Release
        if: steps.check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          body: |
            Install: `pip install shelf-backup==${{ steps.version.outputs.version }}`
          draft: false